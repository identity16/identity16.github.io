{"version":3,"file":"component---src-pages-blog-index-js-f13ed28a59c6e9ac9638.js","mappings":"mMA+BA,MA1BA,YAA0C,IAAxBA,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SACnBC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACI,gCACI,6BACKH,EADL,MACmBE,EAAKE,KAAKC,aAAaC,OAE1C,uBAAKC,UCnBA,6BDoBD,gBAAC,KAAD,CAAMC,GAAG,IAAID,UCnBX,8BDoBE,gBAAC,EAAAE,EAAD,CAAaC,IAAI,qBAAqBC,IAAI,MAA1C,wBAGR,wBAAMJ,UCzBK,mCDyBkBN,M,8DEUzC,UAhCA,YAA6B,IAATC,EAAQ,EAARA,KAChB,OACI,gBAAC,IAAD,CAAQF,UAAU,cACbE,EAAKU,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACnB,2BAASC,IAAKD,EAAKE,IACf,0BACI,gBAAC,KAAD,CAAMT,GAAE,SAAWO,EAAKG,MACnBH,EAAKI,YAAYb,QAG1B,oCAAYS,EAAKI,YAAYC,a","sources":["webpack://identity16.github.io/./src/components/layout.js","webpack://identity16.github.io/./src/components/layout.module.css","webpack://identity16.github.io/./src/pages/blog/index.js"],"sourcesContent":["import { Link, useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport { container, gnb, logo } from \"./layout.module.css\";\n\nfunction Layout({ pageTitle, children }) {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n\n    return (\n        <>\n            <title>\n                {pageTitle} | {data.site.siteMetadata.title}\n            </title>\n            <nav className={gnb}>\n                <Link to=\"/\" className={logo}>\n                    <StaticImage src=\"../images/logo.png\" alt=\"ㅂㄹㄱ\" />\n                </Link>\n            </nav>\n            <main className={container}>{children}</main>\n        </>\n    );\n}\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--eLBMS\";\nexport var gnb = \"layout-module--gnb--3-Rne\";\nexport var logo = \"layout-module--logo---3dvO\";","import { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../../components/layout\";\n\nfunction BlogPage({ data }) {\n    return (\n        <Layout pageTitle=\"Blog Posts\">\n            {data.allMdx.nodes.map((node) => (\n                <article key={node.id}>\n                    <h2>\n                        <Link to={`/blog/${node.slug}`}>\n                            {node.frontmatter.title}\n                        </Link>\n                    </h2>\n                    <p>Posted: {node.frontmatter.date}</p>\n                </article>\n            ))}\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query {\n        allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n            nodes {\n                frontmatter {\n                    date(formatString: \"YYYY/MM/DD\")\n                    author\n                    title\n                }\n                id\n                slug\n            }\n        }\n    }\n`;\nexport default BlogPage;\n"],"names":["pageTitle","children","data","useStaticQuery","site","siteMetadata","title","className","to","S","src","alt","allMdx","nodes","map","node","key","id","slug","frontmatter","date"],"sourceRoot":""}