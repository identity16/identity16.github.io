{"version":3,"file":"component---src-pages-blog-index-js-43cb9d23f5fcdccd51e5.js","mappings":"mMAoCA,MA/BA,YAAqD,IAAnCA,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAC7BC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACI,gCACI,6BACKJ,EADL,MACmBG,EAAKE,KAAKC,aAAaC,OAE1C,uBAAKL,UCnBA,6BDoBD,gBAAC,KAAD,CAAMM,GAAG,KACL,gBAAC,EAAAC,EAAD,CACIP,UCrBN,6BDsBMQ,IAAI,qBACJC,IAAI,MACJC,UAAU,UAJd,wBAQR,wBAAMV,UAAWW,mCAAkBX,GAAYD,M,8GE/BrDa,EACF,myBCmEJ,MAtDA,YAA6B,IDcDC,EAAYC,EAbZC,ECDRC,EAAQ,EAARA,KAChB,GAAoCC,EAAAA,EAAAA,UAAS,MAAtCC,EAAP,KAAmBC,EAAnB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACN,IDVkBC,ECUZC,GDVYD,ECUSL,EAAKO,YAAYlB,MDVlBO,EAAWY,KAAKH,ICYzB,OAAbC,GACAH,EAAcG,EAAS,MAE5B,CAACN,IAGA,2BAAShB,UCzBK,sCD0BV,gBAAC,KAAD,CACIM,GAAE,SAAWU,EAAKS,KAClBC,MACmB,OAAfR,EACM,CACIS,OAAO,SDjBTZ,ECkBMG,GDjBV,iBAATH,EACA,KAQL,0QAGkBF,EAPpB,EAOgCC,EANhC,uBAMiD,IAA7BD,IAAAA,EAAS,QAAoB,IAAjBC,IAAAA,EAAQ,SAiBrC,UAhBW,CACd,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,EAAG,GACL,EAAE,GAAI,GACN,CAAC,GAAI,GACL,CAAC,GAAI,IAGuBc,KAC5B,SAACC,GAAD,qBACmBA,EAAI,GAAKhB,EAD5B,MACwCgB,EAAI,GAAKhB,EADjD,QAC+DC,EAD/D,OAI6BgB,KAAK,KAzB1B,OAGNf,EAEA,iBCO0B,kBAIV,IAGTC,EAAKO,YAAYQ,eACd,gBAAC,EAAAC,EAAD,CACIhC,UCvCG,0CDwCHiC,MACIjB,EAAKO,YAAYQ,cAAcG,gBAC1BC,gBAET1B,IAAI,mBAGZ,uBAAKT,UC9CM,2CD+CNgB,EAAKO,YAAYa,UACd,wBAAM9B,GAAG,IAAIN,UC/Cf,qCDgDOgB,EAAKO,YAAYa,UAG1B,sBAAIpC,UCjDL,kCDiDwBgB,EAAKO,YAAYlB,OACvCW,EAAKO,YAAYc,aACd,qBAAGrC,UClDF,wCDmDIgB,EAAKO,YAAYc,aAG1B,qBAAGrC,UCxDL,iCDwDuBgB,EAAKO,YAAYe,UE5CnD,IAoBP,EA9BA,YAAyC,IAAbC,EAAY,EAApBtC,KAAQsC,OACxB,OACI,gBAAC,IAAD,CAAQzC,UAAU,aAAaE,UCRjB,iCDSTuC,EAAOC,MAAMZ,KAAI,SAACZ,GAAD,OACd,gBAAC,EAAD,CAAUyB,IAAKzB,EAAKS,KAAMT,KAAMA,U","sources":["webpack://identity16.github.io/./src/components/layout.js","webpack://identity16.github.io/./src/components/layout.module.css","webpack://identity16.github.io/./src/utils/emoji.js","webpack://identity16.github.io/./src/components/post-item.js","webpack://identity16.github.io/./src/components/post-item.module.css","webpack://identity16.github.io/./src/pages/blog/index.js","webpack://identity16.github.io/./src/pages/blog/list.module.css"],"sourcesContent":["import { Link, useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport { container, gnb, logo } from \"./layout.module.css\";\n\nfunction Layout({ pageTitle, children, className }) {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n\n    return (\n        <>\n            <title>\n                {pageTitle} | {data.site.siteMetadata.title}\n            </title>\n            <nav className={gnb}>\n                <Link to=\"/\">\n                    <StaticImage\n                        className={logo}\n                        src=\"../images/logo.png\"\n                        alt=\"ㅂㄹㄱ\"\n                        objectFit=\"contain\"\n                    />\n                </Link>\n            </nav>\n            <main className={container + \" \" + className}>{children}</main>\n        </>\n    );\n}\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--eLBMS\";\nexport var gnb = \"layout-module--gnb--3-Rne\";\nexport var logo = \"layout-module--logo---3dvO\";","const emojiRegex =\n    /[\\p{Extended_Pictographic}\\u{1F3FB}-\\u{1F3FF}\\u{1F9B0}-\\u{1F9B3}]/u;\n\n/**\n * 문자열 내에 존재하는 이모지 리턴\n * @param {string} str\n * @returns {array<string>|null}\n */\nexport const findEmoji = (str) => emojiRegex.exec(str);\n\n/**\n * 이모지를 이미지로 변환\n * @param {string} text\n * @returns {string|null} 이미지화 된 이모지\n */\nexport const textToImage = (text) => {\n    if (typeof text !== \"string\") {\n        return null;\n    }\n\n    const elText = `<text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' style='${createShadowFilter(\n        1,\n        \"rgba(0,0,0,0.3)\"\n    )}'>${text}</text>`;\n\n    return `data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:28px;font-family:TossFaceFontMac, sans-serif;'>${elText}</svg>`;\n};\n\nfunction createShadowFilter(offset = 1, color = \"black\") {\n    const direction = [\n        [1, 0],\n        [1, 1],\n        [0, 1],\n        [-1, 1],\n        [-1, 0],\n        [-1, -1],\n        [0, -1],\n        [1, -1],\n    ];\n\n    const dropShadowArr = direction.map(\n        (dir) =>\n            `drop-shadow(${dir[0] * offset}px ${dir[1] * offset}px 0 ${color})`\n    );\n\n    return \"filter:\" + dropShadowArr.join(\" \") + \";\";\n}\n","import React, { useEffect, useState } from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport {\n    postItem,\n    featuredImage,\n    infoContainer,\n    category,\n    title,\n    description,\n    date,\n} from \"./post-item.module.css\";\nimport { textToImage, findEmoji } from \"../utils/emoji\";\n\nfunction PostItem({ node }) {\n    const [titleEmoji, setTitleEmoji] = useState(null);\n\n    useEffect(() => {\n        const emojiArr = findEmoji(node.frontmatter.title);\n\n        if (emojiArr !== null) {\n            setTitleEmoji(emojiArr[0]);\n        }\n    }, [node]);\n\n    return (\n        <article className={postItem}>\n            <Link\n                to={`/blog/${node.slug}`}\n                style={\n                    titleEmoji !== null\n                        ? {\n                              cursor: `url(\"${textToImage(\n                                  titleEmoji\n                              )}\") 16 0, auto`,\n                          }\n                        : {}\n                }\n            >\n                {node.frontmatter.featuredImage && (\n                    <GatsbyImage\n                        className={featuredImage}\n                        image={\n                            node.frontmatter.featuredImage.childImageSharp\n                                .gatsbyImageData\n                        }\n                        alt=\"Featured Image\"\n                    />\n                )}\n                <div className={infoContainer}>\n                    {node.frontmatter.category && (\n                        <span to=\"/\" className={category}>\n                            {node.frontmatter.category}\n                        </span>\n                    )}\n                    <h2 className={title}>{node.frontmatter.title}</h2>\n                    {node.frontmatter.description && (\n                        <p className={description}>\n                            {node.frontmatter.description}\n                        </p>\n                    )}\n                    <p className={date}>{node.frontmatter.date}</p>\n                </div>\n            </Link>\n        </article>\n    );\n}\n\nexport default PostItem;\n","// extracted by mini-css-extract-plugin\nexport var postItem = \"post-item-module--post-item--WnLS0\";\nexport var featuredImage = \"post-item-module--featured-image--aKIOT\";\nexport var infoContainer = \"post-item-module--info-container--Bkfdl\";\nexport var category = \"post-item-module--category--BSxk+\";\nexport var date = \"post-item-module--date--q2V1i\";\nexport var title = \"post-item-module--title--NnjVt\";\nexport var description = \"post-item-module--description--5K11s\";","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../../components/layout\";\nimport { postList } from \"./list.module.css\";\n\nimport PostItem from \"../../components/post-item\";\n\nfunction BlogPage({ data: { allMdx } }) {\n    return (\n        <Layout pageTitle=\"Blog Posts\" className={postList}>\n            {allMdx.nodes.map((node) => (\n                <PostItem key={node.slug} node={node} />\n            ))}\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query {\n        allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n            nodes {\n                slug\n                frontmatter {\n                    title\n                    description\n                    date\n                    category\n                    featuredImage {\n                        childImageSharp {\n                            gatsbyImageData(layout: CONSTRAINED)\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\nexport default BlogPage;\n","// extracted by mini-css-extract-plugin\nexport var postList = \"list-module--post-list--a5yfu\";"],"names":["pageTitle","children","className","data","useStaticQuery","site","siteMetadata","title","to","S","src","alt","objectFit","container","emojiRegex","offset","color","text","node","useState","titleEmoji","setTitleEmoji","useEffect","str","emojiArr","frontmatter","exec","slug","style","cursor","map","dir","join","featuredImage","G","image","childImageSharp","gatsbyImageData","category","description","date","allMdx","nodes","key"],"sourceRoot":""}